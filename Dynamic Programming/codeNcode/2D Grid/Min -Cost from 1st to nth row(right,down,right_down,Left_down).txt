void solve(){
    ll n, m; cin >> n >> m;
    ll ar[n+1][m+1];
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++) cin >> ar[i][j];
    }

    ll dp[n+2][m+2];
    for(int i = 1; i <= n; i++) {
        dp[i][0] = INF;
        dp[i][m+1] = INF;
    }
    for(int j = 1; j <= m; j++) dp[n][j] = ar[n][j];

    for(int i = n-1; i >= 1; i--){
        for(int j = m; j >= 1; j--){
            ll mn = min(dp[i+1][j+1], dp[i+1][j]);
            mn = min(mn, dp[i+1][j-1]);
            dp[i][j] = ar[i][j] + mn;
        }
    }

    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            cout << dp[i][j] << " ";
        }
        ed
    }

    ll min_cost = INF;
    for(int j = 1; j <= m; j++) min_cost = min(min_cost, dp[1][j]);
    cout << "Min cost from 1st row to nth row :" << min_cost;
}